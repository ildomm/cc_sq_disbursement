name: test
on: [push]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test $(go list ./... | grep -v "database" | grep -v "order_load" )

    - name: Generate test coverage
      run: go test $(go list ./... | grep -v "database" | grep -v "order_load" ) -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
    - name: check test coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        profile: cover.out
        local-prefix: github.com/ildomm/cc_sq_disbursement
        threshold-total: 95
        git-branch: badges
        git-token: ${{ github.ref_name == 'main' && secrets.GITHUB_TOKEN || '' }}

  container-job:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
        
      - name: Test
        run: go test $(go list ./... | grep -v "order_load" )
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
